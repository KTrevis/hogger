---
alwaysApply: true
---

# Module Hogger - Guide TSWoW

## Contexte du Projet

Ce projet est un **mod de World of Warcraft (version 3.3.5)** qui utilise **TSWoW** (TypeScript WoW), un framework permettant de créer des mods WoW en utilisant TypeScript.

### Core serveur utilisé

Le core serveur sous-jacent est **TrinityCore** (3.3.5a). La plupart des concepts de données (DBC/DB2), flags/bitmasks, et comportements réseau viennent de TrinityCore. Pour des détails bas niveau (par ex. flags d'inventaire, familles d'objets, enchants), se référer à la documentation et au code TrinityCore lorsque la doc TSWoW est insuffisante.

## Structure du Module

Le module hogger contient :

- [datascripts/](mdc:modules/hogger/datascripts/) - Scripts de données (items, NPCs, sorts, etc.)
- [livescripts/](mdc:modules/hogger/livescripts/) - Scripts en temps réel (événements, comportements, etc.)

## Règle Importante : Consulter les Exemples

**TOUJOURS** consulter le dossier examples pour t'inspirer des bonnes pratiques et des patterns existants avant de répondre aux questions ou de créer du code.

Par ailleurs, pour comprendre le fonctionnement interne de TSWoW, tu peux consulter `tswow-source/`, qui contient le code source de TSWoW (APIs, compileurs, utilitaires, etc.).

## Gestion des Erreurs de Linter

**RÈGLE CRITIQUE** : Avant de considérer qu'une tâche est terminée, tu **DOIS** :

1. Vérifier qu'il n'y a **AUCUNE erreur de linter** dans les fichiers modifiés
2. Utiliser l'outil `read_lints` pour examiner les erreurs
3. Corriger toutes les erreurs trouvées

**INTERDICTION ABSOLUE** : Utiliser un cast de type (comme `as any`, `as SomeType`, etc.) pour "résoudre" une erreur de linter n'est **PAS une solution acceptable**. Tu dois comprendre et résoudre la cause réelle du problème.

**Processus obligatoire** :

- Après chaque modification de fichier → Vérifier les lints
- Si des erreurs existent → Les corriger proprement
- Répéter jusqu'à ce qu'il n'y ait plus d'erreurs
- Seulement alors considérer la tâche comme terminée

## Création de Nouvelles Règles

**IMPORTANT** : Toutes les nouvelles règles Cursor doivent être créées dans le dossier [modules/hogger/.cursor/rules/](mdc:modules/hogger/.cursor/rules/).
